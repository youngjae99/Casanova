{"version":3,"sources":["components/first_slide.js","components/loading.js","components/resultComponent.js","components/second_slide.js","App.js","reportWebVitals.js","index.js"],"names":["FirstSlide","props","style","width","height","backgroundColor","Form","Label","Control","id","type","placeholder","value","input","onChange","e","setInput","target","onKeyDown","keyCode","onClick","required","class","variant","LoadingScreen","padding","Spinner","animation","role","margin","className","ResultComponent","score","ProgressBar","now","label","similar","SecondSlide","spinner","data","Group","controlId","restart","App","useState","setData","hate","setHate","offensive","setOffense","showSpinner","index","setIndex","a","Array","from","document","querySelectorAll","forEach","event","console","log","bodyFormData","FormData","append","axios","post","headers","accept","response","response2","replace","Math","floor","Carousel","controls","indicators","activeIndex","onSelect","selectedIndex","interval","Item","min","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8d015f39.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst FirstSlide = (props) => {\n  const onChange = (e) => {\n    props.setInput(e.target.value);\n  };\n\n  const keypress = (event) => {\n    if (event.keyCode === 13) {\n      props.onClick();\n    }\n  };\n\n  return (\n    <div style={{ width: \"100%\", height: 300, backgroundColor: \"transparent\" }}>\n      <div>\n        <Form.Label>어떤 말을 하려 하나요?</Form.Label>\n        <Form.Control\n          id=\"inputbox\"\n          type=\"text\"\n          placeholder=\"자니? 보고싶다..\"\n          value={props.input}\n          onChange={onChange}\n          onKeyDown={(e) => keypress(e)}\n          required\n        />\n        \n        <br />\n        <div\n          class=\"btn btn-lg btn-secondary fw-bold border-white bg-white\"\n          variant=\"light\"\n          onClick={props.onClick}\n        >\n          판단해줘!\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FirstSlide;\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst LoadingScreen = (props) => {\n  return (\n    <div style={{ width: \"100%\", backgroundColor: \"transparent\"}}>\n      <div style={{padding: \"50px\"}}>\n      <Spinner animation=\"border\" role=\"status\" style={{margin: \"10px\"}}>\n            <span className=\"visually-hidden\">Loading...</span>\n      </Spinner>\n      <p>AI가 판단 중..</p>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingScreen;\n","import React from \"react\";\nimport { ProgressBar } from \"react-bootstrap\";\n\nconst ResultComponent = (props) => {\n  return (\n    <div>\n        <div>\n            <h3>{props.score}점짜리 멘트</h3>\n            <ProgressBar now={props.score} label={`${props.score}점`} /><br/>\n            <p>이렇게 대신 말해봐도 좋을 것 같아요</p><h4>{props.similar}</h4>\n        </div>\n    </div>\n  );\n};\n\nexport default ResultComponent;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport LoadingScreen from \"./loading\";\nimport ResultComponent from \"./resultComponent\";\n\nconst SecondSlide = (props) => {\n  return (\n    <div style={{ width: \"100%\", height: 300, backgroundColor: \"transparent\" }}>\n      <div>{props.spinner && <LoadingScreen />}</div>\n      {props.data && (\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n          <ResultComponent score={props.score} similar={props.similar}/>\n          <br/>\n          <div\n            class=\"btn btn-lg btn-secondary fw-bold border-white bg-white\"\n            variant=\"light\"\n            onClick={props.restart}\n          >\n            <i class=\"fas fa-redo-alt\"></i> 다시하기\n          </div>\n        </Form.Group>\n      )}\n    </div>\n  );\n};\n\nexport default SecondSlide;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport FirstSlide from \"./components/first_slide.js\";\nimport SecondSlide from \"./components/second_slide.js\";\n\nconst App = () => {\n  const [input, setInput] = useState(null);\n  const [data, setData] = useState(null);\n  const [hate, setHate] = useState(null);\n  const [offensive, setOffense] = useState(null);\n  const [spinner, showSpinner] = useState(false);\n  const [index, setIndex] = useState(0); // carousel page index\n\n  const handleSelect = (selectedIndex, e) => {\n    setIndex(selectedIndex);\n    console.log(\"handleSelect\", selectedIndex);\n  };\n\n  const restart = async () => {\n    setInput(null);\n    Array.from(document.querySelectorAll(\"#inputbox\")).forEach(\n      input => (input.value = \"\")\n    );\n    setData(null);\n    setIndex(0);\n  };\n\n  const onClick = async (event) => {\n    if(input==null){\n      return \"none\";\n    }\n    setIndex(1);\n    console.log(\"text:\", input);\n    showSpinner(true);\n    try {\n      let bodyFormData = new FormData();\n      bodyFormData.append(\"text\", input);\n      bodyFormData.append(\"num_samples\", 100);\n      const response = await axios.post(\n        \"https://main-ko-gpt2-dino-fpem123.endpoint.ainize.ai/gen\",\n        bodyFormData,\n        {\n          headers: {\n            // Overwrite Axios's automatically set Content-Type\n            \"Content-Type\": \"multipart/form-data\",\n            accept: \"application/json\",\n          },\n        }\n      );\n      const response2 = await axios.post(\n        \"https://master-soongsil-bert-base-beep-deploy-jason9693.endpoint.ainize.ai/predict/logits\",\n        bodyFormData,\n        {\n          headers: {\n            // Overwrite Axios's automatically set Content-Type\n            \"Content-Type\": \"multipart/form-data\",\n            accept: \"application/json\",\n          },\n        }\n      );\n\n      console.log(response.data)\n      console.log(response2.data[\"result\"])\n\n      if(response.data[\"1\"]!=null) setData(response.data[\"1\"][\"text_b\"].replace(\"\\\"\", \"\"));\n      else if(response.data[\"2\"]!=null) setData(response.data[\"2\"][\"text_b\"].replace(\"\\\"\", \"\"));\n      else setData(\"제가 추천할 다른 표현이 생각이 안나는군요\");\n      setHate(100-(Math.floor(response2.data[\"result\"][\"Hate\"]*100)));\n      setOffense(100-(Math.floor(response2.data[\"result\"][\"Offensive\"]*100)));\n\n      showSpinner(false);\n    } catch (e) {\n      console.log(e);\n    }  \n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Carousel\n          controls={false}\n          indicators={false}\n          activeIndex={index}\n          onSelect={handleSelect}\n          interval={null}\n        >\n          <Carousel.Item>\n            <FirstSlide input={null} onClick={onClick} setInput={setInput} />\n          </Carousel.Item>\n\n          <Carousel.Item>\n            <SecondSlide spinner={spinner} data={data} restart={restart} score={Math.min(offensive, hate)} similar={data}/>\n          </Carousel.Item>\n        </Carousel>\n        <br />\n      </div>\n      <br />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}